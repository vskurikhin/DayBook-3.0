task start11CreateKeystore(type: Exec) {
    workingDir = getProperty("src.test.resources")
    executable "keytool"
    args "-genkeypair", "-alias", "boguscert", "-storepass", "password", "-keypass", "password", "-keyalg", "RSA", "-storetype", "JKS", "-keystore", "test.keystore", "-dname", "CN=Developer, OU=Department, O=Company, L=City, ST=State, C=CA"
}

start11CreateKeystore.onlyIf {
    def taskPath = it.path.toString()
    def submodule = taskPath.split(":")[1]
    def file = new File(submodule + "/${getProperty("src.test.resources")}/test.keystore")
    !file?.exists()
}

task start12ImportCertToKeystore(type: Exec) {
    workingDir = getProperty("src.test.resources")
    executable "keytool"
    args "-importcert", "-noprompt", "-trustcacerts", "-alias", "localhost", "-storepass", "password", "-file", "../../main/resources/localhost-cert.pem", "-keystore", "test.keystore"
}

start12ImportCertToKeystore.onlyIf {
    def taskPath = it.path.toString()
    def submodule = taskPath.split(":")[1]
    def certFile = new File(submodule + "/${getProperty("src.main.resources")}/localhost-cert.pem")
    def keystoreFile = new File(submodule + "/${getProperty("src.test.resources")}/test.keystore")
    certFile?.exists() && !keystoreFile?.exists()
}

task start13ImportPKCS12ToKeystore(type: Exec) {
    workingDir = getProperty("src.test.resources")
    executable "keytool"
    args "-importkeystore", "-noprompt", "-srckeystore", "../../main/resources/localhost.p12", "-srcstorepass", "", "-destkeystore", "test.keystore", "-storepass", "password", "-srcstoretype", "pkcs12", "-alias", "localhost-p12"
}

start13ImportPKCS12ToKeystore.onlyIf {
    def taskPath = it.path.toString()
    def submodule = taskPath.split(":")[1]
    def certFile = new File(submodule + "/${getProperty("src.main.resources")}/localhost.p12")
    def keystoreFile = new File(submodule + "/${getProperty("src.test.resources")}/test.keystore")
    certFile?.exists() && keystoreFile?.exists()
}
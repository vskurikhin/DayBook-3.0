@startuml

!include C4.puml
!include C4_Context.puml
!include C4_Container.puml
!include C4_Component.puml

LAYOUT_WITH_LEGEND()

title DayBook System Container Diagram

top to bottom direction

Person(user, "User", "A user of the DayBook")
System(DayBookFrontEnd, "DayBook FrontEnd", "")
System(DayBookBackEnd, "DayBook BackEnd", "")

Container_Boundary(DayBookFrontEnd, "DayBook FrontEnd") {
  Container(UI, "User front interface", "React", "Handles user interactions")
  Container(APIGateway, "API Gateway", "Java, Quarkus", "Handles user interactions")
  Container(AuthFront, "Authorizations Microservice", "Java, Quarkus", "Authentication and authorizations users")
  ContainerDb(APIDatabase, "Cache Database", "PostgreSQL", "Stores ")
  ContainerDb(AuthFrontDatabase, "Auth RO Database", "PostgreSQL", "Stores ")
}

Container_Boundary(DayBookBackEnd, "DayBook BackEnd") {
  Container(AuthBack, "Authorizations Microservice", "GoLang", "Authentication and authorizations users")
  Container(Debezium, "Debezium Microservice", "Java, Spring", "Debezium")
  Container(Dictionary, "Dictionary Microservice", "GoLang", "Dictionary")
  Container(JsonRecords, "JSON Microservice", "GoLang", "JSON Records")
  Container(Messaging, "Messaging Microservice", "GoLang", "Messaging")
  ContainerDb(AuthBackDatabase, "Auth Database", "PostgreSQL", "Stores ")
  ContainerDb(DictionaryDatabase, "Dictionary Database", "PostgreSQL", "Stores ")
  ContainerDb(DBDatabase, "DB Database", "PostgreSQL", "Stores ")
  ContainerQueue(Kafka, "Kafka", "Apache Kafka", "Event bus")
}

Rel(user, UI, "Uses the system")
Rel(UI, AuthFront, "Auth the system")
Rel(UI, APIGateway, "Uses the system")
Rel(APIGateway, APIDatabase, "")
Rel(AuthFront, AuthFrontDatabase, "Reads user, password and roles")
Rel_U(AuthBackDatabase, AuthFrontDatabase, "Replication")
Rel_D(AuthFront, AuthBack, "gRPC Writes user, password and roles")
Rel_D(APIGateway, Dictionary, "gRPC integration")
Rel_D(APIGateway, JsonRecords, "gRPC integration")
Rel_U(Messaging, APIGateway,  "gRPC stream")
Rel_D(AuthBack, AuthBackDatabase, "Reads/Writes data")
Rel_D(Debezium, Kafka, "Produce messages")
Rel_D(Dictionary, DictionaryDatabase, "Reads/Writes data")
Rel_D(JsonRecords, DBDatabase, "Reads/Writes data")
Rel_D(Messaging, Kafka, "Consume messages")
Rel_U(Debezium, APIGateway, "gRPC events")
Rel_U(AuthBackDatabase, Debezium, "Replication")
Rel_U(DictionaryDatabase, Debezium, "Replication")
Rel_U(DBDatabase, Debezium, "Replication")

Lay_D(AuthBack, AuthBackDatabase)
Lay_D(APIDatabase, AuthBack)
Lay_D(DayBookFrontEnd, DayBookBackEnd)

@enduml
